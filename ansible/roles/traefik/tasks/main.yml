---
- name: Start Traefik
  block:
    - name: Create Traefik Directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
      with_items:
        - "{{ traefik_data_directory }}"
        - "{{ traefik_data_directory }}/letsencrypt"
        - "{{ traefik_data_directory }}/services"

    - name: Template Traefik config.yml
      ansible.builtin.template:
        src: traefik.yml.j2
        dest: "{{ traefik_data_directory }}/traefik.yml"
      register: template_config

    - name: Traefik services configuration
      template:
        src: "{{ item }}"
        dest: "{{ traefik_data_directory }}/services/{{ item | basename | regex_replace('\\.j2','') }}"
        mode: 0644
      with_fileglob:
        - ../templates/services/*.j2

    - name: Check if acme.json exists
      ansible.builtin.stat:
        path: "{{ traefik_data_directory }}/letsencrypt/acme.json"
      register: file_status

    - name: Creates acme.json if it doesn't exists
      ansible.builtin.file:
        path: "{{ traefik_data_directory }}/letsencrypt/acme.json"
        state: touch
        owner: "{{ lyoko_user }}"
        group: "{{ lyoko_user }}"
        mode: "0600"
      when: not file_status.stat.exists

    - name: Create Proxy Docker Network
      docker_network:
        name: proxy
      register: network

    - name: Traefik Docker Container
      community.docker.docker_container:
        name: "{{ traefik_container_name }}"
        image: "{{ traefik_image_name }}:{{ traefik_image_version }}"
        networks:
          - name: "proxy"
        ports:
          - "80:80"
          - "443:443"
        volumes:
          - "{{ traefik_data_directory }}/traefik.yml:/etc/traefik/traefik.yml:ro"
          - "{{ traefik_data_directory }}/letsencrypt:/letsencrypt:rw"
          - "{{ traefik_data_directory }}/services:/services:ro"
          - "/var/run/docker.sock:/var/run/docker.sock:ro"
        env:
          CF_API_EMAIL: "{{ lyoko_user_email }}"
          CF_API_KEY: "{{ traefik_cf_api_key }}"
        restart_policy: unless-stopped
        recreate: "{{ template_config is changed }}"
  when: traefik_enabled is true